{{- if .Values.alerting.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: {{ include "generic-service.fullname" . }}
  labels: {{- include "generic-service.top-level-labels" . | nindent 4 }}
    prometheus: cluster
    role: alert-rules

spec:
  groups:
    - name: {{ include "generic-service.fullname" . }}.rules
      rules:
      {{- if ne .Values.rollout.controller "ArgoRollout" }}
        {{- if gt .Values.replicas 0.0 }}
        - alert: Down
          expr: kube_{{ .Values.rollout.controller | lower }}_status_{{ if eq .Values.rollout.controller "DaemonSet" }}number{{ else }}replicas{{ end }}_ready{namespace="{{ .Release.Namespace }}", {{ .Values.rollout.controller | lower }}="{{ include "generic-service.fullname" . }}"} == 0
          for: '{{ if .Values.ingress.enabled }}1m{{ else }}5m{{ end }}'
          labels: {{- include "generic-service.alert-labels" . | nindent 12 }} critical
            topic: availability
          annotations: {{- include "generic-service.alert-annotations" . | nindent 12 }} down
            description: 'All replicas for {{ include "generic-service.fullname" . }} are down.'
        {{- end }}

        {{- if or (gt .Values.replicas 1.0) (eq .Values.rollout.controller "DaemonSet") }}
        - alert: ReplicasDown
          expr: |
            {{- if eq .Values.rollout.controller "StatefulSet" }}
            kube_statefulset_status_replicas{namespace="{{ .Release.Namespace }}", statefulset="{{ include "generic-service.fullname" . }}"} - kube_statefulset_status_replicas_ready{namespace="{{ .Release.Namespace }}", statefulset="{{ include "generic-service.fullname" . }}"} > 0
            {{- else }}
            kube_{{ .Values.rollout.controller | lower }}_status_{{ if eq .Values.rollout.controller "DaemonSet" }}number{{ else }}replicas{{ end }}_unavailable{namespace="{{ .Release.Namespace }}", {{ .Values.rollout.controller | lower }}="{{ include "generic-service.fullname" . }}"} > 0
            {{- end }}
          for: {{ mul .Values.alerting.pod.maxStartupSeconds .Values.replicas | int }}s
          labels: {{- include "generic-service.alert-labels" . | nindent 12 }} warning
            topic: availability
          annotations: {{- include "generic-service.alert-annotations" . | nindent 12 }} replicas down
            description: '{{"{{ $value }}"}} replicas for {{ include "generic-service.fullname" . }} are down.'
        {{- end }}
      {{- end }}

        - alert: ContainerRestart
          # Avoid constantly retriggering during crash loops by comparing over interval slightly longer than CrashLoopBackOff upper limit (5m).
          # Don't trigger during startup grace period (service might just be waiting for dependencies).
          expr: |
            increase(kube_pod_container_status_restarts_total{namespace="{{ .Release.Namespace }}", container="{{ include "generic-service.fullname" . }}"}[6m]) > 0
            and on (pod)
            time() - kube_pod_created{namespace="{{ .Release.Namespace }}", pod=~"{{ .Release.Name }}-[0-9a-f]+(-[0-9a-z]{5})?"} > {{ .Values.alerting.pod.maxStartupSeconds | int }}
          labels: {{- include "generic-service.alert-labels" . | nindent 12 }} warning
            topic: availability
          annotations: {{- include "generic-service.alert-annotations" . | nindent 12 }} crash/restart
            description: '{{"{{ $labels.pod }}"}} has crashed/restarted.'

      {{- if .Values.alerting.pod.maxAgeSeconds }}
        - alert: PodTooOld
          expr: |
            time() - kube_pod_created{namespace="{{ .Release.Namespace }}", pod=~"{{ .Release.Name }}-[0-9a-f]+(-[0-9a-z]{5})?"}
            > {{ .Values.alerting.pod.maxAgeSeconds | int }}
          labels: {{- include "generic-service.alert-labels" . | nindent 12 }} warning
            topic: updates
          annotations: {{- include "generic-service.alert-annotations" . | nindent 12 }} Pods too old
            description: 'The Pod {{"{{ $labels.pod }}"}} has not been updated for {{"{{ humanizeDuration $value }}"}}.'
      {{- end }}


      {{- if .Values.alerting.memory.enabled }}
        - alert: MemoryUsageAboveRequest
          expr: |
            max(container_memory_working_set_bytes{namespace="{{ .Release.Namespace }}", container="{{ include "generic-service.fullname" . }}"}) by (pod) -
            min(kube_pod_container_resource_requests{namespace="{{ .Release.Namespace }}", container="{{ include "generic-service.fullname" . }}", resource="memory"}) by (pod)
            > 0
          for: 10m
          labels: {{- include "generic-service.alert-labels" . | nindent 12 }} warning
            topic: resources
          annotations: {{- include "generic-service.alert-annotations" . | nindent 12 }} using more memory than requested
            description: '{{"{{ $labels.pod }}"}} is using {{"{{ humanize1024 $value }}"}}B more than its memory request ({{ .Values.resources.requests.memory }}B). It runs the risk of being OOMKilled if there is memory pressure on the node.'

        - alert: MemoryUsageCloseToLimit
          expr: |
            max(container_memory_working_set_bytes{namespace="{{ .Release.Namespace }}", container="{{ include "generic-service.fullname" . }}"}) by (pod) /
            min(kube_pod_container_resource_limits{namespace="{{ .Release.Namespace }}", container="{{ include "generic-service.fullname" . }}", resource="memory"}) by (pod)
            > {{ .Values.alerting.memory.maxUsageFactor }}
          labels: {{- include "generic-service.alert-labels" . | nindent 12 }} critical
            topic: resources
          annotations: {{- include "generic-service.alert-annotations" . | nindent 12 }} memory usage close to limit
            description: '{{"{{ $labels.pod }}"}} is using {{"{{ humanizePercentage $value }}"}} of its memory limit ({{ .Values.resources.limits.memory }}B). It runs the risk of being OOMKilled if it reaches the limit.'
      {{- end }}

      {{- if and (ne .Values.rollout.controller "StatefulSet") (ne .Values.rollout.strategy "Recreate") }}
        {{- if .Values.alerting.memory.quotaBufferFactor }}
        - alert: MemoryRequestQuotaInsufficient
          expr: |
            min(kube_resourcequota{namespace="{{ .Release.Namespace }}", resource="requests.memory", type="hard"})
            - max(kube_resourcequota{namespace="{{ .Release.Namespace }}", resource="requests.memory", type="used"})
            < {{ .Values.alerting.memory.quotaBufferFactor }} * max(kube_pod_container_resource_requests{namespace="{{ .Release.Namespace }}", container="{{ include "generic-service.fullname" . }}", resource="memory"})
          for: {{ mul .Values.alerting.pod.maxStartupSeconds .Values.replicas | int }}s
          labels: {{- include "generic-service.alert-labels" . | nindent 12 }} warning
            topic: quotas
          annotations: {{- include "generic-service.alert-annotations" . | nindent 12 }} insufficient memory request quota in {{ .Release.Namespace }}
            description: 'The remaining/unused memory request quota in {{ .Release.Namespace }} ({{"{{ humanize1024 $value }}"}}B) may be insufficient to allow {{ include "generic-service.fullname" . }} to update or restart.'
        - alert: MemoryLimitQuotaInsufficient
          expr: |
            min(kube_resourcequota{namespace="{{ .Release.Namespace }}", resource="limits.memory", type="hard"})
            - max(kube_resourcequota{namespace="{{ .Release.Namespace }}", resource="limits.memory", type="used"})
            < {{ .Values.alerting.memory.quotaBufferFactor }} * max(kube_pod_container_resource_limits{namespace="{{ .Release.Namespace }}", container="{{ include "generic-service.fullname" . }}", resource="memory"})
          for: {{ mul .Values.alerting.pod.maxStartupSeconds .Values.replicas | int }}s
          labels: {{- include "generic-service.alert-labels" . | nindent 12 }} warning
            topic: quotas
          annotations: {{- include "generic-service.alert-annotations" . | nindent 12 }} insufficient memory limit quota in {{ .Release.Namespace }}
            description: 'The remaining/unused memory limit quota in {{ .Release.Namespace }} ({{"{{ humanize1024 $value }}"}}B) may be insufficient to allow {{ include "generic-service.fullname" . }} to update or restart.'
        {{- end }}
        {{- if .Values.alerting.cpu.quotaBufferFactor }}
        - alert: CpuRequestQuotaInsufficient
          expr: |
            min(kube_resourcequota{namespace="{{ .Release.Namespace }}", resource="requests.cpu", type="hard"})
            - max(kube_resourcequota{namespace="{{ .Release.Namespace }}", resource="requests.cpu", type="used"})
            < {{ .Values.alerting.cpu.quotaBufferFactor }} * max(kube_pod_container_resource_requests{namespace="{{ .Release.Namespace }}", container="{{ include "generic-service.fullname" . }}", resource="cpu"})
          for: {{ mul .Values.alerting.pod.maxStartupSeconds .Values.replicas | int }}s
          labels: {{- include "generic-service.alert-labels" . | nindent 12 }} warning
            topic: quotas
          annotations: {{- include "generic-service.alert-annotations" . | nindent 12 }} insufficient CPU request quota in {{ .Release.Namespace }}
            description: 'The remaining/unused CPU request quota in {{ .Release.Namespace }} ({{"{{ $value }}"}} cores) may be insufficient to allow {{ include "generic-service.fullname" . }} to update or restart.'
        - alert: CpuLimitQuotaInsufficient
          expr: |
            min(kube_resourcequota{namespace="{{ .Release.Namespace }}", resource="limits.cpu", type="hard"})
            - max(kube_resourcequota{namespace="{{ .Release.Namespace }}", resource="limits.cpu", type="used"})
            < {{ .Values.alerting.cpu.quotaBufferFactor }} * max(kube_pod_container_resource_limits{namespace="{{ .Release.Namespace }}", container="{{ include "generic-service.fullname" . }}", resource="cpu"})
          for: {{ mul .Values.alerting.pod.maxStartupSeconds .Values.replicas | int }}s
          labels: {{- include "generic-service.alert-labels" . | nindent 12 }} warning
            topic: quotas
          annotations: {{- include "generic-service.alert-annotations" . | nindent 12 }} insufficient CPU limit quota in {{ .Release.Namespace }}
            description: 'The remaining/unused CPU limit quota in {{ .Release.Namespace }} ({{"{{ $value }}"}} cores) may be insufficient to allow {{ include "generic-service.fullname" . }} to update or restart.'
        {{- end }}
      {{- end }}

      {{- if ne (float64 .Values.alerting.cpu.maxThrottleFactor) 1.0 }}
        - alert: CpuThrottling
          expr: |
            increase(container_cpu_cfs_throttled_periods_total{namespace="{{ .Release.Namespace }}", container="{{ include "generic-service.fullname" . }}"}[{{ .Values.alerting.cpu.sampleInterval }}]) /
            increase(container_cpu_cfs_periods_total{namespace="{{ .Release.Namespace }}", container="{{ include "generic-service.fullname" . }}"}[{{ .Values.alerting.cpu.sampleInterval }}])
            > {{ .Values.alerting.cpu.maxThrottleFactor }}
          labels: {{- include "generic-service.alert-labels" . | nindent 12 }} warning
            topic: resources
          annotations: {{- include "generic-service.alert-annotations" . | nindent 12 }} CPU throttling
            description: '{{"{{ $labels.pod }}"}} was throttled by {{"{{ humanizePercentage $value }}"}} in the last {{ .Values.alerting.cpu.sampleInterval }} because it reached its CPU limit ({{ .Values.resources.limits.cpu }} cores). This may lead to latency spikes.'
      {{- end }}

      {{- if .Values.ingress.enabled }}
        {{- if or .Values.ingress.istio.enabled (eq .Values.ingress.class "nginx") }}
        {{- if .Values.alerting.http.referenceInterval }}
        - alert: HttpSlowdown
          expr: |
            (sum(increase({{ include "generic-service.request-duration-metric" . }}[{{ .Values.alerting.http.sampleInterval }}])) / sum(increase({{ include "generic-service.request-count-metric" . }}[{{ .Values.alerting.http.sampleInterval }}]))) /
            (sum(increase({{ include "generic-service.request-duration-metric" . }}[{{ .Values.alerting.http.referenceInterval }}])) / sum(increase({{ include "generic-service.request-count-metric" . }}[{{ .Values.alerting.http.referenceInterval }}])))
            > {{ .Values.alerting.http.maxSlowdown }}
          labels: {{- include "generic-service.alert-labels" . | nindent 12 }} info
            topic: ingress
          annotations: {{- include "generic-service.alert-annotations" . | nindent 12 }} HTTP responses slower than usual
            description: '{{ include "generic-service.fullname" . }} HTTP responses are {{"{{ $value }}"}}x slower in the last {{ .Values.alerting.http.sampleInterval }} than in the last {{ .Values.alerting.http.referenceInterval }}.'

        - alert: Http4xx
          expr: |
            (sum(rate({{ include "generic-service.request-code-count-metric" . }}"4.."}[{{ .Values.alerting.http.sampleInterval }}])) / sum(rate({{ include "generic-service.request-count-metric" . }}[{{ .Values.alerting.http.sampleInterval }}]))) /
            (sum(rate({{ include "generic-service.request-code-count-metric" . }}"4.."}[{{ .Values.alerting.http.referenceInterval }}])) / sum(rate({{ include "generic-service.request-count-metric" . }}[{{ .Values.alerting.http.referenceInterval }}])))
            > {{ .Values.alerting.http.max4xxRatio }}
          labels: {{- include "generic-service.alert-labels" . | nindent 12 }} warning
          annotations: {{- include "generic-service.alert-annotations" . | nindent 12 }} higher HTTP 4xx rate
            description: '{{ include "generic-service.fullname" . }} gave {{"{{ $value }}"}}x more HTTP 4xx responses per request in the last {{ .Values.alerting.http.sampleInterval }} than in the last {{ .Values.alerting.http.referenceInterval }}.'
        {{- end }}

        - alert: Http5xx
          expr: |
            sum(round(increase({{ include "generic-service.request-code-count-metric" . }}"5.."}[{{ .Values.alerting.http.sampleInterval }}])))
            > {{ .Values.alerting.http.max5xxCount }}
          labels: {{- include "generic-service.alert-labels" . | nindent 12 }} critical
            topic: ingress
          annotations: {{- include "generic-service.alert-annotations" . | nindent 12 }} HTTP 5xx responses
            description: '{{ include "generic-service.fullname" . }} gave {{"{{ $value }}"}} HTTP 5xx responses in the last {{ .Values.alerting.http.sampleInterval }}.'
        {{- end }}

        {{- if or (eq .Values.ingress.protocol "grpc") (eq .Values.ingress.protocol "grpcs") }}
        {{- if .Values.alerting.grpc.referenceInterval }}
        - alert: GrpcErrors
          expr: |
            (sum(rate({{ .Values.alerting.grpc.requestsMetric }}{namespace="{{ .Release.Namespace }}",release="{{ .Release.Name }}",grpc_code!="OK"}[{{ .Values.alerting.grpc.sampleInterval }}])) / sum(rate({{ .Values.alerting.grpc.requestsMetric }}{namespace="{{ .Release.Namespace }}",release="{{ .Release.Name }}"}[{{ .Values.alerting.grpc.sampleInterval }}]))) /
            (sum(rate({{ .Values.alerting.grpc.requestsMetric }}{namespace="{{ .Release.Namespace }}",release="{{ .Release.Name }}",grpc_code!="OK"}[{{ .Values.alerting.grpc.referenceInterval }}])) / sum(rate({{ .Values.alerting.grpc.requestsMetric }}{namespace="{{ .Release.Namespace }}",release="{{ .Release.Name }}"}[{{ .Values.alerting.grpc.referenceInterval }}])))
            > {{ .Values.alerting.grpc.maxErrorRatio }}
          {{- if .Values.alerting.grpc.errorDuration }}
          for: {{ .Values.alerting.grpc.errorDuration }}
          {{- end }}
          labels: {{- include "generic-service.alert-labels" . | nindent 12 }} warning
            topic: ingress
          annotations: {{- include "generic-service.alert-annotations" . | nindent 12 }} higher gRPC error rate
            description: '{{ include "generic-service.fullname" . }} gave {{"{{ $value }}"}}x more gRPC error responses per request in the last {{ .Values.alerting.grpc.sampleInterval }} than in the last {{ .Values.alerting.grpc.referenceInterval }}.'
        {{- end }}

        - alert: GrpcCriticalErrors
          expr: |
            round(sum(increase({{ .Values.alerting.grpc.requestsMetric }}{namespace="{{ .Release.Namespace }}", release="{{ .Release.Name }}", grpc_code=~"{{ .Values.alerting.grpc.criticalCodes | join "|" }}"}[{{ .Values.alerting.grpc.sampleInterval }}])) by (grpc_code))
            > {{ .Values.alerting.grpc.maxCriticalErrors | int }}
          labels: {{- include "generic-service.alert-labels" . | nindent 12 }} critical
            topic: ingress
          annotations: {{- include "generic-service.alert-annotations" . | nindent 12 }} critical gRPC errors
            description: '{{ include "generic-service.fullname" . }} returned {{"{{ $value }}"}} gRPC errors with status code {{"{{ $labels.grpc_code }}"}} in the last {{ .Values.alerting.grpc.sampleInterval }}.'
        {{- end }}
      {{- end }}

      {{- range $name, $props := .Values.alerting.custom }}
      {{- if not $.Values.monitoring.enabled }}{{ fail "Custom alerts can only be used when monitoring.enabled is true" }}{{ end }}
        - alert: {{ $name | quote }}
          expr: |
            {{ $props.aggregate | required "alert aggregate required" }}(
              {{- if $props.round }}round({{ end }}
              {{- if $props.increaseOver }}increase({{ end }}
              {{- if $props.averageOver }}avg_over_time({{ end }}
                {{ $props.metric | required "alert metric required" }}{
                  namespace="{{ $.Release.Namespace }}", release="{{ $.Release.Name }}"{{ if $props.labelMatchers }}, {{ tpl $props.labelMatchers $ }}{{ end }}
                }
              {{- if $props.averageOver }}[{{ $props.averageOver }}]){{ end }}
              {{- if $props.increaseOver }}[{{ $props.increaseOver }}]){{ end }}
              {{- if $props.round }}){{ end }}
            )
            {{ $props.predicate | required "alert predicate required" }}
          labels: {{- include "generic-service.alert-labels" $ | nindent 12 }} {{ $props.severity | default "warning" }}
          {{- if $props.topic }}
            topic: {{ $props.topic }}
          {{- end }}
          annotations: {{- include "generic-service.alert-annotations" $ | nindent 12 }} {{ $props.summary | required "alert summary required" }}
            description: {{ $props.description | required "alert description required" | quote }}
      {{- end }}

{{- end }}
