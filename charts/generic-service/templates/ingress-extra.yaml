{{- if and (and .Values.ingress.enabled .Values.ingress.extra) (not .Values.ingress.istio.enabled) }}
{{- range $name, $extra := .Values.ingress.extra }}
{{- if $extra.domains }}
{{- /* get properties and fall back to main ingress properties */}}
{{- $class := $extra.class | default $.Values.ingress.class }}
{{- $timeout := $extra.timeoutSeconds | default $.Values.ingress.timeoutSeconds }}
{{- $cors := $extra.cors | default $.Values.ingress.cors }}
{{- $protocol := $.Values.ingress.protocol }}
{{- if $extra.port }}
  {{- if $extra.portRef }}
    {{ fail "ingress.extra.*.port and ingress.extra.*.portRef are mutually exclusive" }}
  {{- end }}
  {{ $protocol = $extra.protocol }}
{{- else if $extra.portRef }}
  {{- $protocol = (get $.Values.ingress.extra $extra.portRef).protocol | default "http" }}
{{- else if $extra.protocol }}
  {{ fail "ingress.extra.*.protocol may only be set if ingress.extra.*.port is also set" }}
{{- end }}
{{- $annotations := deepCopy ($.Values.ingress.annotations | default dict) | mustMerge ($extra.annotations | default dict) }}

{{- /* build ingress map that is compatible with defines that are meant for the main ingress */}}
{{- $mergedExtra := deepCopy $extra }}
{{- $mergedExtra = $mergedExtra | mustMerge (dict "class" $class) }}
{{- $mergedExtra = $mergedExtra | mustMerge (dict "timeoutSeconds" $timeout) }}
{{- $mergedExtra = $mergedExtra | mustMerge (dict "cors" $cors) }}
{{- $mergedExtra = $mergedExtra | mustMerge (dict "protocol" $protocol) }}
{{- $mergedExtra = $mergedExtra | mustMerge (dict "annotations" $annotations) }}

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "generic-service.fullname" $ }}-{{ $name }}
  labels: {{- include "generic-service.default-labels" $ | nindent 4 }}
  annotations: {{- include "generic-service.ingress-annotations" $mergedExtra | nindent 4 }}

spec:
  {{- with $class }}
  ingressClassName: {{ . }}
  {{- end }}

  {{- if $extra.tls }}{{ if $extra.tls.enabled }}
  tls:
    - secretName: {{ $extra.tls.secret | default (printf "%s-%s-tls" $.Release.Name $name) }}
      hosts: {{- $extra.domains | toYaml | nindent 8 }}
  {{- end }}{{ end }}

  rules:
    {{- range $extra.domains }}
    - host: {{ tpl . $ | quote }}
      http:
        paths:
          {{- range ($extra.paths | default (list "/")) }}
          - pathType: {{ $extra.pathType | default $.Values.ingress.pathType | default "Prefix" }}
            path: {{ . | quote }}
            backend:
              service:
                name: {{ include "generic-service.fullname" $ }}
                port:
                  name: {{ include "generic-service.normalize-protocol" $protocol }}-{{ if $extra.portRef }}{{ $extra.portRef }}{{ else if $extra.port }}{{ $name }}{{ else }}ingress{{ end }}
            {{- end }}
      {{- end }}
---
{{- end }}
{{- end }}
{{- end }}
