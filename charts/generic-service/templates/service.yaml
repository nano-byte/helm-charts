{{- if and .Values.ingress.enabled (not .Values.rollout.flagger) }}

apiVersion: v1
kind: Service
metadata:
  name: {{ include "generic-service.fullname" . }}
  labels: {{- include "generic-service.top-level-labels" . | nindent 4 }}
  annotations:
    {{- if not .Values.autoscaling.enabled }}
    service.kubernetes.io/topology-aware-hints: auto
    {{- end }}
    {{- $contour := eq .Values.ingress.class "contour" }}
    {{- range $_, $extra := .Values.ingress.extra }}{{ if eq $extra.class "contour" }}{{ $contour = "true" }}{{ end }}{{ end }}
    {{- if $contour }}
    projectcontour.io/upstream-protocol.h2c: grpc-ingress{{ range $name, $_ := .Values.ingress.extra }},grpc-{{ $name }}{{ end }}
    projectcontour.io/upstream-protocol.h2: grpcs-ingress{{ range $name, $_ := .Values.ingress.extra }},grpcs-{{ $name }}{{ end }}
    projectcontour.io/upstream-protocol.tls: https-ingress{{ range $name, $_ := .Values.ingress.extra }},https-{{ $name }}{{ end }}
    {{- end }}

spec:
  selector: {{- include "generic-service.selector-labels" . | nindent 4 }}
  {{- if .Values.ingress.additionalSelectors }}
  {{- .Values.ingress.additionalSelectors | toYaml | nindent 4 }}
  {{- end }}

  ports:
    - name: '{{ include "generic-service.normalize-protocol" .Values.ingress.protocol }}-ingress'
      appProtocol: '{{ include "generic-service.normalize-app-protocol" .Values.ingress.protocol }}'
      port: 80
      targetPort: {{ .Values.ingress.port }}
    {{- range $name, $extra := .Values.ingress.extra }}
    {{- if $extra.port }}
    - name: {{ include "generic-service.normalize-protocol" $extra.protocol }}-{{ $name }}
      appProtocol: '{{ include "generic-service.normalize-app-protocol" $extra.protocol }}'
      port: {{ $extra.port }}
    {{- end }}
    {{- end }}

{{- if .Values.ingress.headless }}
---
apiVersion: v1
kind: Service
metadata:
  name: '{{ include "generic-service.fullname" . }}-headless'
  labels: {{- include "generic-service.top-level-labels" . | nindent 4 }}

spec:
  selector: {{- include "generic-service.selector-labels" . | nindent 4 }}
    {{- if and .Values.ingress.additionalSelectors (not .Values.ingress.headlessExposesAll) }}
    {{- .Values.ingress.additionalSelectors | toYaml | nindent 4 }}
    {{- end }}

  clusterIP: None
  publishNotReadyAddresses: {{ .Values.ingress.headlessExposesAll }}

  ports:
    - name: '{{ include "generic-service.normalize-protocol" .Values.ingress.protocol }}-ingress'
      appProtocol: '{{ include "generic-service.normalize-app-protocol" .Values.ingress.protocol }}'
      port: {{ .Values.ingress.port }}
    {{- range $name, $extra := .Values.ingress.extra }}
    {{- if $extra.port }}
    - name: {{ include "generic-service.normalize-protocol" $extra.protocol }}-{{ $name }}
      appProtocol: '{{ include "generic-service.normalize-app-protocol" $extra.protocol }}'
      port: {{ $extra.port }}
    {{- end }}
    {{- end }}
{{- end }}

{{- if .Values.ingress.nodeLocal }}
---
apiVersion: v1
kind: Service
metadata:
  name: '{{ include "generic-service.fullname" . }}-local'
  labels: {{- include "generic-service.top-level-labels" . | nindent 4 }}

spec:
  selector: {{- include "generic-service.selector-labels" . | nindent 4 }}

  internalTrafficPolicy: Local

  ports:
    - name: '{{ include "generic-service.normalize-protocol" .Values.ingress.protocol }}-ingress'
      appProtocol: '{{ include "generic-service.normalize-app-protocol" .Values.ingress.protocol }}'
      port: 80
      targetPort: {{ .Values.ingress.port }}
    {{- range $name, $extra := .Values.ingress.extra }}
    {{- if $extra.port }}
    - name: {{ include "generic-service.normalize-protocol" $extra.protocol }}-{{ $name }}
      appProtocol: '{{ include "generic-service.normalize-app-protocol" $extra.protocol }}'
      port: {{ $extra.port }}
    {{- end }}
    {{- end }}
{{- end }}

{{- if eq .Values.rollout.controller "ArgoRollout" }}
---
apiVersion: v1
kind: Service
metadata:
  name: '{{ include "generic-service.fullname" . }}-preview'
  labels: {{- include "generic-service.top-level-labels" . | nindent 4 }}

spec:
  selector: {{- include "generic-service.selector-labels" . | nindent 4 }}
    {{- if .Values.ingress.additionalSelectors }}
    {{- .Values.ingress.additionalSelectors | toYaml | nindent 4 }}
    {{- end }}

  {{- if .Values.ingress.headless }}
  clusterIP: None
  {{- end }}

  ports:
    - name: '{{ include "generic-service.normalize-protocol" .Values.ingress.protocol }}-ingress'
      appProtocol: '{{ include "generic-service.normalize-app-protocol" .Values.ingress.protocol }}'
      port: 80
      targetPort: {{ .Values.ingress.port }}
    {{- range $name, $extra := .Values.ingress.extra }}
    {{- if $extra.port }}
    - name: {{ include "generic-service.normalize-protocol" $extra.protocol }}-{{ $name }}
      appProtocol: '{{ include "generic-service.normalize-app-protocol" $extra.protocol }}'
      port: {{ $extra.port }}
    {{- end }}
    {{- end }}
{{- end }}

{{- end }}
